version: '3.8'

services:
  vm-manager:
    build: .
    container_name: istio-vm-manager
    ports:
      - "8080:8080"
    environment:
      # Azure Configuration
      - AZURE_SUBSCRIPTION_ID=${AZURE_SUBSCRIPTION_ID}
      - AZURE_TENANT_ID=${AZURE_TENANT_ID}
      - AZURE_CLIENT_ID=${AZURE_CLIENT_ID}
      - AZURE_CLIENT_SECRET=${AZURE_CLIENT_SECRET}
      
      # Kubernetes Configuration
      - KUBECONFIG=/app/kubeconfig
      
      # Logging
      - LOG_LEVEL=info
      - ENVIRONMENT=development
    volumes:
      # Mount kubeconfig
      - ${HOME}/.kube/config:/app/kubeconfig:ro
      
      # Mount Azure credentials if using file-based auth
      - ${HOME}/.azure:/home/vmmanager/.azure:ro
      
      # Mount configuration
      - ./configs:/app/configs:ro
      
      # Mount templates
      - ./templates:/app/templates:ro
      
      # Mount VM image cloud-init
      - ./vm-image/cloud-init-istio-vm.yaml:/app/templates/cloud-init-istio-vm.yaml:ro
      
      # Persistent storage for logs
      - ./logs:/app/logs
      
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - vm-manager-network

  # Optional: Add a reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: istio-vm-manager-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - vm-manager
    networks:
      - vm-manager-network
    profiles:
      - production

networks:
  vm-manager-network:
    driver: bridge

volumes:
  vm-manager-logs:
    driver: local